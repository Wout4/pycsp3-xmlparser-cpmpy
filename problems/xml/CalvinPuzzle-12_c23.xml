<instance format="XCSP3" type="CSP">
  <variables>
    <array id="x" note="x[i][j] is the value in the grid at row i and column j" size="[12][12]"> 1..144 </array>
    <array id="aux_gb" note="aux_gb[i] is the ith auxiliary variable having been automatically introduced" size="[144]">
      <domain for="aux_gb[0..1] aux_gb[10..13] aux_gb[22..23] aux_gb[120..121] aux_gb[130..133] aux_gb[142..143]"> 0..3 </domain>
      <domain for="aux_gb[2] aux_gb[9] aux_gb[14] aux_gb[21] aux_gb[24..25] aux_gb[34..35] aux_gb[108..109] aux_gb[118..119] aux_gb[122] aux_gb[129] aux_gb[134] aux_gb[141]"> 0..4 </domain>
      <domain for="aux_gb[3..8] aux_gb[15..20] aux_gb[36..37] aux_gb[46..49] aux_gb[58..61] aux_gb[70..73] aux_gb[82..85] aux_gb[94..97] aux_gb[106..107] aux_gb[123..128] aux_gb[135..140]"> 0..5 </domain>
      <domain for="aux_gb[26] aux_gb[33] aux_gb[110] aux_gb[117]"> 0..6 </domain>
      <domain for="aux_gb[27..32] aux_gb[38] aux_gb[45] aux_gb[50] aux_gb[57] aux_gb[62] aux_gb[69] aux_gb[74] aux_gb[81] aux_gb[86] aux_gb[93] aux_gb[98] aux_gb[105] aux_gb[111..116]"> 0..7 </domain>
      <domain for="aux_gb[39..44] aux_gb[51..56] aux_gb[63..68] aux_gb[75..80] aux_gb[87..92] aux_gb[99..104]"> 0..8 </domain>
    </array>
  </variables>
  <constraints>
    <allDifferent note="putting all values from 1 to n*n in the grid"> x[][] </allDifferent>
    <intension note="tag(symmetry-breaking"> eq(x[0][0],1) </intension>
    <group note="each cell must be linked to its neighbors">
      <intension> or(eq(%0,144),ge(%1,1)) </intension>
      <args> x[0][0] aux_gb[0] </args>
      <args> x[0][1] aux_gb[1] </args>
      <args> x[0][2] aux_gb[2] </args>
      <args> x[0][3] aux_gb[3] </args>
      <args> x[0][4] aux_gb[4] </args>
      <args> x[0][5] aux_gb[5] </args>
      <args> x[0][6] aux_gb[6] </args>
      <args> x[0][7] aux_gb[7] </args>
      <args> x[0][8] aux_gb[8] </args>
      <args> x[0][9] aux_gb[9] </args>
      <args> x[0][10] aux_gb[10] </args>
      <args> x[0][11] aux_gb[11] </args>
      <args> x[1][0] aux_gb[12] </args>
      <args> x[1][1] aux_gb[13] </args>
      <args> x[1][2] aux_gb[14] </args>
      <args> x[1][3] aux_gb[15] </args>
      <args> x[1][4] aux_gb[16] </args>
      <args> x[1][5] aux_gb[17] </args>
      <args> x[1][6] aux_gb[18] </args>
      <args> x[1][7] aux_gb[19] </args>
      <args> x[1][8] aux_gb[20] </args>
      <args> x[1][9] aux_gb[21] </args>
      <args> x[1][10] aux_gb[22] </args>
      <args> x[1][11] aux_gb[23] </args>
      <args> x[2][0] aux_gb[24] </args>
      <args> x[2][1] aux_gb[25] </args>
      <args> x[2][2] aux_gb[26] </args>
      <args> x[2][3] aux_gb[27] </args>
      <args> x[2][4] aux_gb[28] </args>
      <args> x[2][5] aux_gb[29] </args>
      <args> x[2][6] aux_gb[30] </args>
      <args> x[2][7] aux_gb[31] </args>
      <args> x[2][8] aux_gb[32] </args>
      <args> x[2][9] aux_gb[33] </args>
      <args> x[2][10] aux_gb[34] </args>
      <args> x[2][11] aux_gb[35] </args>
      <args> x[3][0] aux_gb[36] </args>
      <args> x[3][1] aux_gb[37] </args>
      <args> x[3][2] aux_gb[38] </args>
      <args> x[3][3] aux_gb[39] </args>
      <args> x[3][4] aux_gb[40] </args>
      <args> x[3][5] aux_gb[41] </args>
      <args> x[3][6] aux_gb[42] </args>
      <args> x[3][7] aux_gb[43] </args>
      <args> x[3][8] aux_gb[44] </args>
      <args> x[3][9] aux_gb[45] </args>
      <args> x[3][10] aux_gb[46] </args>
      <args> x[3][11] aux_gb[47] </args>
      <args> x[4][0] aux_gb[48] </args>
      <args> x[4][1] aux_gb[49] </args>
      <args> x[4][2] aux_gb[50] </args>
      <args> x[4][3] aux_gb[51] </args>
      <args> x[4][4] aux_gb[52] </args>
      <args> x[4][5] aux_gb[53] </args>
      <args> x[4][6] aux_gb[54] </args>
      <args> x[4][7] aux_gb[55] </args>
      <args> x[4][8] aux_gb[56] </args>
      <args> x[4][9] aux_gb[57] </args>
      <args> x[4][10] aux_gb[58] </args>
      <args> x[4][11] aux_gb[59] </args>
      <args> x[5][0] aux_gb[60] </args>
      <args> x[5][1] aux_gb[61] </args>
      <args> x[5][2] aux_gb[62] </args>
      <args> x[5][3] aux_gb[63] </args>
      <args> x[5][4] aux_gb[64] </args>
      <args> x[5][5] aux_gb[65] </args>
      <args> x[5][6] aux_gb[66] </args>
      <args> x[5][7] aux_gb[67] </args>
      <args> x[5][8] aux_gb[68] </args>
      <args> x[5][9] aux_gb[69] </args>
      <args> x[5][10] aux_gb[70] </args>
      <args> x[5][11] aux_gb[71] </args>
      <args> x[6][0] aux_gb[72] </args>
      <args> x[6][1] aux_gb[73] </args>
      <args> x[6][2] aux_gb[74] </args>
      <args> x[6][3] aux_gb[75] </args>
      <args> x[6][4] aux_gb[76] </args>
      <args> x[6][5] aux_gb[77] </args>
      <args> x[6][6] aux_gb[78] </args>
      <args> x[6][7] aux_gb[79] </args>
      <args> x[6][8] aux_gb[80] </args>
      <args> x[6][9] aux_gb[81] </args>
      <args> x[6][10] aux_gb[82] </args>
      <args> x[6][11] aux_gb[83] </args>
      <args> x[7][0] aux_gb[84] </args>
      <args> x[7][1] aux_gb[85] </args>
      <args> x[7][2] aux_gb[86] </args>
      <args> x[7][3] aux_gb[87] </args>
      <args> x[7][4] aux_gb[88] </args>
      <args> x[7][5] aux_gb[89] </args>
      <args> x[7][6] aux_gb[90] </args>
      <args> x[7][7] aux_gb[91] </args>
      <args> x[7][8] aux_gb[92] </args>
      <args> x[7][9] aux_gb[93] </args>
      <args> x[7][10] aux_gb[94] </args>
      <args> x[7][11] aux_gb[95] </args>
      <args> x[8][0] aux_gb[96] </args>
      <args> x[8][1] aux_gb[97] </args>
      <args> x[8][2] aux_gb[98] </args>
      <args> x[8][3] aux_gb[99] </args>
      <args> x[8][4] aux_gb[100] </args>
      <args> x[8][5] aux_gb[101] </args>
      <args> x[8][6] aux_gb[102] </args>
      <args> x[8][7] aux_gb[103] </args>
      <args> x[8][8] aux_gb[104] </args>
      <args> x[8][9] aux_gb[105] </args>
      <args> x[8][10] aux_gb[106] </args>
      <args> x[8][11] aux_gb[107] </args>
      <args> x[9][0] aux_gb[108] </args>
      <args> x[9][1] aux_gb[109] </args>
      <args> x[9][2] aux_gb[110] </args>
      <args> x[9][3] aux_gb[111] </args>
      <args> x[9][4] aux_gb[112] </args>
      <args> x[9][5] aux_gb[113] </args>
      <args> x[9][6] aux_gb[114] </args>
      <args> x[9][7] aux_gb[115] </args>
      <args> x[9][8] aux_gb[116] </args>
      <args> x[9][9] aux_gb[117] </args>
      <args> x[9][10] aux_gb[118] </args>
      <args> x[9][11] aux_gb[119] </args>
      <args> x[10][0] aux_gb[120] </args>
      <args> x[10][1] aux_gb[121] </args>
      <args> x[10][2] aux_gb[122] </args>
      <args> x[10][3] aux_gb[123] </args>
      <args> x[10][4] aux_gb[124] </args>
      <args> x[10][5] aux_gb[125] </args>
      <args> x[10][6] aux_gb[126] </args>
      <args> x[10][7] aux_gb[127] </args>
      <args> x[10][8] aux_gb[128] </args>
      <args> x[10][9] aux_gb[129] </args>
      <args> x[10][10] aux_gb[130] </args>
      <args> x[10][11] aux_gb[131] </args>
      <args> x[11][0] aux_gb[132] </args>
      <args> x[11][1] aux_gb[133] </args>
      <args> x[11][2] aux_gb[134] </args>
      <args> x[11][3] aux_gb[135] </args>
      <args> x[11][4] aux_gb[136] </args>
      <args> x[11][5] aux_gb[137] </args>
      <args> x[11][6] aux_gb[138] </args>
      <args> x[11][7] aux_gb[139] </args>
      <args> x[11][8] aux_gb[140] </args>
      <args> x[11][9] aux_gb[141] </args>
      <args> x[11][10] aux_gb[142] </args>
      <args> x[11][11] aux_gb[143] </args>
    </group>
    <group>
      <count>
        <list> %... </list>
        <values> 1 </values>
        <condition> (eq,%0) </condition>
      </count>
      <args> aux_gb[0] eq(x[3][0],add(x[0][0],1)) eq(x[0][3],add(x[0][0],1)) eq(x[2][2],add(x[0][0],1)) </args>
      <args> aux_gb[1] eq(x[3][1],add(x[0][1],1)) eq(x[0][4],add(x[0][1],1)) eq(x[2][3],add(x[0][1],1)) </args>
      <args> aux_gb[2] eq(x[3][2],add(x[0][2],1)) eq(x[0][5],add(x[0][2],1)) eq(x[2][0],add(x[0][2],1)) eq(x[2][4],add(x[0][2],1)) </args>
      <args> aux_gb[3] eq(x[3][3],add(x[0][3],1)) eq(x[0][0],add(x[0][3],1)) eq(x[0][6],add(x[0][3],1)) eq(x[2][1],add(x[0][3],1)) eq(x[2][5],add(x[0][3],1)) </args>
      <args> aux_gb[4] eq(x[3][4],add(x[0][4],1)) eq(x[0][1],add(x[0][4],1)) eq(x[0][7],add(x[0][4],1)) eq(x[2][2],add(x[0][4],1)) eq(x[2][6],add(x[0][4],1)) </args>
      <args> aux_gb[5] eq(x[3][5],add(x[0][5],1)) eq(x[0][2],add(x[0][5],1)) eq(x[0][8],add(x[0][5],1)) eq(x[2][3],add(x[0][5],1)) eq(x[2][7],add(x[0][5],1)) </args>
      <args> aux_gb[6] eq(x[3][6],add(x[0][6],1)) eq(x[0][3],add(x[0][6],1)) eq(x[0][9],add(x[0][6],1)) eq(x[2][4],add(x[0][6],1)) eq(x[2][8],add(x[0][6],1)) </args>
      <args> aux_gb[7] eq(x[3][7],add(x[0][7],1)) eq(x[0][4],add(x[0][7],1)) eq(x[0][10],add(x[0][7],1)) eq(x[2][5],add(x[0][7],1)) eq(x[2][9],add(x[0][7],1)) </args>
      <args> aux_gb[8] eq(x[3][8],add(x[0][8],1)) eq(x[0][5],add(x[0][8],1)) eq(x[0][11],add(x[0][8],1)) eq(x[2][6],add(x[0][8],1)) eq(x[2][10],add(x[0][8],1)) </args>
      <args> aux_gb[9] eq(x[3][9],add(x[0][9],1)) eq(x[0][6],add(x[0][9],1)) eq(x[2][7],add(x[0][9],1)) eq(x[2][11],add(x[0][9],1)) </args>
      <args> aux_gb[10] eq(x[3][10],add(x[0][10],1)) eq(x[0][7],add(x[0][10],1)) eq(x[2][8],add(x[0][10],1)) </args>
      <args> aux_gb[11] eq(x[3][11],add(x[0][11],1)) eq(x[0][8],add(x[0][11],1)) eq(x[2][9],add(x[0][11],1)) </args>
      <args> aux_gb[12] eq(x[4][0],add(x[1][0],1)) eq(x[1][3],add(x[1][0],1)) eq(x[3][2],add(x[1][0],1)) </args>
      <args> aux_gb[13] eq(x[4][1],add(x[1][1],1)) eq(x[1][4],add(x[1][1],1)) eq(x[3][3],add(x[1][1],1)) </args>
      <args> aux_gb[14] eq(x[4][2],add(x[1][2],1)) eq(x[1][5],add(x[1][2],1)) eq(x[3][0],add(x[1][2],1)) eq(x[3][4],add(x[1][2],1)) </args>
      <args> aux_gb[15] eq(x[4][3],add(x[1][3],1)) eq(x[1][0],add(x[1][3],1)) eq(x[1][6],add(x[1][3],1)) eq(x[3][1],add(x[1][3],1)) eq(x[3][5],add(x[1][3],1)) </args>
      <args> aux_gb[16] eq(x[4][4],add(x[1][4],1)) eq(x[1][1],add(x[1][4],1)) eq(x[1][7],add(x[1][4],1)) eq(x[3][2],add(x[1][4],1)) eq(x[3][6],add(x[1][4],1)) </args>
      <args> aux_gb[17] eq(x[4][5],add(x[1][5],1)) eq(x[1][2],add(x[1][5],1)) eq(x[1][8],add(x[1][5],1)) eq(x[3][3],add(x[1][5],1)) eq(x[3][7],add(x[1][5],1)) </args>
      <args> aux_gb[18] eq(x[4][6],add(x[1][6],1)) eq(x[1][3],add(x[1][6],1)) eq(x[1][9],add(x[1][6],1)) eq(x[3][4],add(x[1][6],1)) eq(x[3][8],add(x[1][6],1)) </args>
      <args> aux_gb[19] eq(x[4][7],add(x[1][7],1)) eq(x[1][4],add(x[1][7],1)) eq(x[1][10],add(x[1][7],1)) eq(x[3][5],add(x[1][7],1)) eq(x[3][9],add(x[1][7],1)) </args>
      <args> aux_gb[20] eq(x[4][8],add(x[1][8],1)) eq(x[1][5],add(x[1][8],1)) eq(x[1][11],add(x[1][8],1)) eq(x[3][6],add(x[1][8],1)) eq(x[3][10],add(x[1][8],1)) </args>
      <args> aux_gb[21] eq(x[4][9],add(x[1][9],1)) eq(x[1][6],add(x[1][9],1)) eq(x[3][7],add(x[1][9],1)) eq(x[3][11],add(x[1][9],1)) </args>
      <args> aux_gb[22] eq(x[4][10],add(x[1][10],1)) eq(x[1][7],add(x[1][10],1)) eq(x[3][8],add(x[1][10],1)) </args>
      <args> aux_gb[23] eq(x[4][11],add(x[1][11],1)) eq(x[1][8],add(x[1][11],1)) eq(x[3][9],add(x[1][11],1)) </args>
      <args> aux_gb[24] eq(x[5][0],add(x[2][0],1)) eq(x[2][3],add(x[2][0],1)) eq(x[0][2],add(x[2][0],1)) eq(x[4][2],add(x[2][0],1)) </args>
      <args> aux_gb[25] eq(x[5][1],add(x[2][1],1)) eq(x[2][4],add(x[2][1],1)) eq(x[0][3],add(x[2][1],1)) eq(x[4][3],add(x[2][1],1)) </args>
      <args> aux_gb[26] eq(x[5][2],add(x[2][2],1)) eq(x[2][5],add(x[2][2],1)) eq(x[0][0],add(x[2][2],1)) eq(x[0][4],add(x[2][2],1)) eq(x[4][0],add(x[2][2],1)) eq(x[4][4],add(x[2][2],1)) </args>
      <args> aux_gb[27] eq(x[5][3],add(x[2][3],1)) eq(x[2][0],add(x[2][3],1)) eq(x[2][6],add(x[2][3],1)) eq(x[0][1],add(x[2][3],1)) eq(x[0][5],add(x[2][3],1)) eq(x[4][1],add(x[2][3],1)) eq(x[4][5],add(x[2][3],1)) </args>
      <args> aux_gb[28] eq(x[5][4],add(x[2][4],1)) eq(x[2][1],add(x[2][4],1)) eq(x[2][7],add(x[2][4],1)) eq(x[0][2],add(x[2][4],1)) eq(x[0][6],add(x[2][4],1)) eq(x[4][2],add(x[2][4],1)) eq(x[4][6],add(x[2][4],1)) </args>
      <args> aux_gb[29] eq(x[5][5],add(x[2][5],1)) eq(x[2][2],add(x[2][5],1)) eq(x[2][8],add(x[2][5],1)) eq(x[0][3],add(x[2][5],1)) eq(x[0][7],add(x[2][5],1)) eq(x[4][3],add(x[2][5],1)) eq(x[4][7],add(x[2][5],1)) </args>
      <args> aux_gb[30] eq(x[5][6],add(x[2][6],1)) eq(x[2][3],add(x[2][6],1)) eq(x[2][9],add(x[2][6],1)) eq(x[0][4],add(x[2][6],1)) eq(x[0][8],add(x[2][6],1)) eq(x[4][4],add(x[2][6],1)) eq(x[4][8],add(x[2][6],1)) </args>
      <args> aux_gb[31] eq(x[5][7],add(x[2][7],1)) eq(x[2][4],add(x[2][7],1)) eq(x[2][10],add(x[2][7],1)) eq(x[0][5],add(x[2][7],1)) eq(x[0][9],add(x[2][7],1)) eq(x[4][5],add(x[2][7],1)) eq(x[4][9],add(x[2][7],1)) </args>
      <args> aux_gb[32] eq(x[5][8],add(x[2][8],1)) eq(x[2][5],add(x[2][8],1)) eq(x[2][11],add(x[2][8],1)) eq(x[0][6],add(x[2][8],1)) eq(x[0][10],add(x[2][8],1)) eq(x[4][6],add(x[2][8],1)) eq(x[4][10],add(x[2][8],1)) </args>
      <args> aux_gb[33] eq(x[5][9],add(x[2][9],1)) eq(x[2][6],add(x[2][9],1)) eq(x[0][7],add(x[2][9],1)) eq(x[0][11],add(x[2][9],1)) eq(x[4][7],add(x[2][9],1)) eq(x[4][11],add(x[2][9],1)) </args>
      <args> aux_gb[34] eq(x[5][10],add(x[2][10],1)) eq(x[2][7],add(x[2][10],1)) eq(x[0][8],add(x[2][10],1)) eq(x[4][8],add(x[2][10],1)) </args>
      <args> aux_gb[35] eq(x[5][11],add(x[2][11],1)) eq(x[2][8],add(x[2][11],1)) eq(x[0][9],add(x[2][11],1)) eq(x[4][9],add(x[2][11],1)) </args>
      <args> aux_gb[36] eq(x[0][0],add(x[3][0],1)) eq(x[6][0],add(x[3][0],1)) eq(x[3][3],add(x[3][0],1)) eq(x[1][2],add(x[3][0],1)) eq(x[5][2],add(x[3][0],1)) </args>
      <args> aux_gb[37] eq(x[0][1],add(x[3][1],1)) eq(x[6][1],add(x[3][1],1)) eq(x[3][4],add(x[3][1],1)) eq(x[1][3],add(x[3][1],1)) eq(x[5][3],add(x[3][1],1)) </args>
      <args> aux_gb[38] eq(x[0][2],add(x[3][2],1)) eq(x[6][2],add(x[3][2],1)) eq(x[3][5],add(x[3][2],1)) eq(x[1][0],add(x[3][2],1)) eq(x[1][4],add(x[3][2],1)) eq(x[5][0],add(x[3][2],1)) eq(x[5][4],add(x[3][2],1)) </args>
      <args> aux_gb[39] eq(x[0][3],add(x[3][3],1)) eq(x[6][3],add(x[3][3],1)) eq(x[3][0],add(x[3][3],1)) eq(x[3][6],add(x[3][3],1)) eq(x[1][1],add(x[3][3],1)) eq(x[1][5],add(x[3][3],1)) eq(x[5][1],add(x[3][3],1)) eq(x[5][5],add(x[3][3],1)) </args>
      <args> aux_gb[40] eq(x[0][4],add(x[3][4],1)) eq(x[6][4],add(x[3][4],1)) eq(x[3][1],add(x[3][4],1)) eq(x[3][7],add(x[3][4],1)) eq(x[1][2],add(x[3][4],1)) eq(x[1][6],add(x[3][4],1)) eq(x[5][2],add(x[3][4],1)) eq(x[5][6],add(x[3][4],1)) </args>
      <args> aux_gb[41] eq(x[0][5],add(x[3][5],1)) eq(x[6][5],add(x[3][5],1)) eq(x[3][2],add(x[3][5],1)) eq(x[3][8],add(x[3][5],1)) eq(x[1][3],add(x[3][5],1)) eq(x[1][7],add(x[3][5],1)) eq(x[5][3],add(x[3][5],1)) eq(x[5][7],add(x[3][5],1)) </args>
      <args> aux_gb[42] eq(x[0][6],add(x[3][6],1)) eq(x[6][6],add(x[3][6],1)) eq(x[3][3],add(x[3][6],1)) eq(x[3][9],add(x[3][6],1)) eq(x[1][4],add(x[3][6],1)) eq(x[1][8],add(x[3][6],1)) eq(x[5][4],add(x[3][6],1)) eq(x[5][8],add(x[3][6],1)) </args>
      <args> aux_gb[43] eq(x[0][7],add(x[3][7],1)) eq(x[6][7],add(x[3][7],1)) eq(x[3][4],add(x[3][7],1)) eq(x[3][10],add(x[3][7],1)) eq(x[1][5],add(x[3][7],1)) eq(x[1][9],add(x[3][7],1)) eq(x[5][5],add(x[3][7],1)) eq(x[5][9],add(x[3][7],1)) </args>
      <args> aux_gb[44] eq(x[0][8],add(x[3][8],1)) eq(x[6][8],add(x[3][8],1)) eq(x[3][5],add(x[3][8],1)) eq(x[3][11],add(x[3][8],1)) eq(x[1][6],add(x[3][8],1)) eq(x[1][10],add(x[3][8],1)) eq(x[5][6],add(x[3][8],1)) eq(x[5][10],add(x[3][8],1)) </args>
      <args> aux_gb[45] eq(x[0][9],add(x[3][9],1)) eq(x[6][9],add(x[3][9],1)) eq(x[3][6],add(x[3][9],1)) eq(x[1][7],add(x[3][9],1)) eq(x[1][11],add(x[3][9],1)) eq(x[5][7],add(x[3][9],1)) eq(x[5][11],add(x[3][9],1)) </args>
      <args> aux_gb[46] eq(x[0][10],add(x[3][10],1)) eq(x[6][10],add(x[3][10],1)) eq(x[3][7],add(x[3][10],1)) eq(x[1][8],add(x[3][10],1)) eq(x[5][8],add(x[3][10],1)) </args>
      <args> aux_gb[47] eq(x[0][11],add(x[3][11],1)) eq(x[6][11],add(x[3][11],1)) eq(x[3][8],add(x[3][11],1)) eq(x[1][9],add(x[3][11],1)) eq(x[5][9],add(x[3][11],1)) </args>
      <args> aux_gb[48] eq(x[1][0],add(x[4][0],1)) eq(x[7][0],add(x[4][0],1)) eq(x[4][3],add(x[4][0],1)) eq(x[2][2],add(x[4][0],1)) eq(x[6][2],add(x[4][0],1)) </args>
      <args> aux_gb[49] eq(x[1][1],add(x[4][1],1)) eq(x[7][1],add(x[4][1],1)) eq(x[4][4],add(x[4][1],1)) eq(x[2][3],add(x[4][1],1)) eq(x[6][3],add(x[4][1],1)) </args>
      <args> aux_gb[50] eq(x[1][2],add(x[4][2],1)) eq(x[7][2],add(x[4][2],1)) eq(x[4][5],add(x[4][2],1)) eq(x[2][0],add(x[4][2],1)) eq(x[2][4],add(x[4][2],1)) eq(x[6][0],add(x[4][2],1)) eq(x[6][4],add(x[4][2],1)) </args>
      <args> aux_gb[51] eq(x[1][3],add(x[4][3],1)) eq(x[7][3],add(x[4][3],1)) eq(x[4][0],add(x[4][3],1)) eq(x[4][6],add(x[4][3],1)) eq(x[2][1],add(x[4][3],1)) eq(x[2][5],add(x[4][3],1)) eq(x[6][1],add(x[4][3],1)) eq(x[6][5],add(x[4][3],1)) </args>
      <args> aux_gb[52] eq(x[1][4],add(x[4][4],1)) eq(x[7][4],add(x[4][4],1)) eq(x[4][1],add(x[4][4],1)) eq(x[4][7],add(x[4][4],1)) eq(x[2][2],add(x[4][4],1)) eq(x[2][6],add(x[4][4],1)) eq(x[6][2],add(x[4][4],1)) eq(x[6][6],add(x[4][4],1)) </args>
      <args> aux_gb[53] eq(x[1][5],add(x[4][5],1)) eq(x[7][5],add(x[4][5],1)) eq(x[4][2],add(x[4][5],1)) eq(x[4][8],add(x[4][5],1)) eq(x[2][3],add(x[4][5],1)) eq(x[2][7],add(x[4][5],1)) eq(x[6][3],add(x[4][5],1)) eq(x[6][7],add(x[4][5],1)) </args>
      <args> aux_gb[54] eq(x[1][6],add(x[4][6],1)) eq(x[7][6],add(x[4][6],1)) eq(x[4][3],add(x[4][6],1)) eq(x[4][9],add(x[4][6],1)) eq(x[2][4],add(x[4][6],1)) eq(x[2][8],add(x[4][6],1)) eq(x[6][4],add(x[4][6],1)) eq(x[6][8],add(x[4][6],1)) </args>
      <args> aux_gb[55] eq(x[1][7],add(x[4][7],1)) eq(x[7][7],add(x[4][7],1)) eq(x[4][4],add(x[4][7],1)) eq(x[4][10],add(x[4][7],1)) eq(x[2][5],add(x[4][7],1)) eq(x[2][9],add(x[4][7],1)) eq(x[6][5],add(x[4][7],1)) eq(x[6][9],add(x[4][7],1)) </args>
      <args> aux_gb[56] eq(x[1][8],add(x[4][8],1)) eq(x[7][8],add(x[4][8],1)) eq(x[4][5],add(x[4][8],1)) eq(x[4][11],add(x[4][8],1)) eq(x[2][6],add(x[4][8],1)) eq(x[2][10],add(x[4][8],1)) eq(x[6][6],add(x[4][8],1)) eq(x[6][10],add(x[4][8],1)) </args>
      <args> aux_gb[57] eq(x[1][9],add(x[4][9],1)) eq(x[7][9],add(x[4][9],1)) eq(x[4][6],add(x[4][9],1)) eq(x[2][7],add(x[4][9],1)) eq(x[2][11],add(x[4][9],1)) eq(x[6][7],add(x[4][9],1)) eq(x[6][11],add(x[4][9],1)) </args>
      <args> aux_gb[58] eq(x[1][10],add(x[4][10],1)) eq(x[7][10],add(x[4][10],1)) eq(x[4][7],add(x[4][10],1)) eq(x[2][8],add(x[4][10],1)) eq(x[6][8],add(x[4][10],1)) </args>
      <args> aux_gb[59] eq(x[1][11],add(x[4][11],1)) eq(x[7][11],add(x[4][11],1)) eq(x[4][8],add(x[4][11],1)) eq(x[2][9],add(x[4][11],1)) eq(x[6][9],add(x[4][11],1)) </args>
      <args> aux_gb[60] eq(x[2][0],add(x[5][0],1)) eq(x[8][0],add(x[5][0],1)) eq(x[5][3],add(x[5][0],1)) eq(x[3][2],add(x[5][0],1)) eq(x[7][2],add(x[5][0],1)) </args>
      <args> aux_gb[61] eq(x[2][1],add(x[5][1],1)) eq(x[8][1],add(x[5][1],1)) eq(x[5][4],add(x[5][1],1)) eq(x[3][3],add(x[5][1],1)) eq(x[7][3],add(x[5][1],1)) </args>
      <args> aux_gb[62] eq(x[2][2],add(x[5][2],1)) eq(x[8][2],add(x[5][2],1)) eq(x[5][5],add(x[5][2],1)) eq(x[3][0],add(x[5][2],1)) eq(x[3][4],add(x[5][2],1)) eq(x[7][0],add(x[5][2],1)) eq(x[7][4],add(x[5][2],1)) </args>
      <args> aux_gb[63] eq(x[2][3],add(x[5][3],1)) eq(x[8][3],add(x[5][3],1)) eq(x[5][0],add(x[5][3],1)) eq(x[5][6],add(x[5][3],1)) eq(x[3][1],add(x[5][3],1)) eq(x[3][5],add(x[5][3],1)) eq(x[7][1],add(x[5][3],1)) eq(x[7][5],add(x[5][3],1)) </args>
      <args> aux_gb[64] eq(x[2][4],add(x[5][4],1)) eq(x[8][4],add(x[5][4],1)) eq(x[5][1],add(x[5][4],1)) eq(x[5][7],add(x[5][4],1)) eq(x[3][2],add(x[5][4],1)) eq(x[3][6],add(x[5][4],1)) eq(x[7][2],add(x[5][4],1)) eq(x[7][6],add(x[5][4],1)) </args>
      <args> aux_gb[65] eq(x[2][5],add(x[5][5],1)) eq(x[8][5],add(x[5][5],1)) eq(x[5][2],add(x[5][5],1)) eq(x[5][8],add(x[5][5],1)) eq(x[3][3],add(x[5][5],1)) eq(x[3][7],add(x[5][5],1)) eq(x[7][3],add(x[5][5],1)) eq(x[7][7],add(x[5][5],1)) </args>
      <args> aux_gb[66] eq(x[2][6],add(x[5][6],1)) eq(x[8][6],add(x[5][6],1)) eq(x[5][3],add(x[5][6],1)) eq(x[5][9],add(x[5][6],1)) eq(x[3][4],add(x[5][6],1)) eq(x[3][8],add(x[5][6],1)) eq(x[7][4],add(x[5][6],1)) eq(x[7][8],add(x[5][6],1)) </args>
      <args> aux_gb[67] eq(x[2][7],add(x[5][7],1)) eq(x[8][7],add(x[5][7],1)) eq(x[5][4],add(x[5][7],1)) eq(x[5][10],add(x[5][7],1)) eq(x[3][5],add(x[5][7],1)) eq(x[3][9],add(x[5][7],1)) eq(x[7][5],add(x[5][7],1)) eq(x[7][9],add(x[5][7],1)) </args>
      <args> aux_gb[68] eq(x[2][8],add(x[5][8],1)) eq(x[8][8],add(x[5][8],1)) eq(x[5][5],add(x[5][8],1)) eq(x[5][11],add(x[5][8],1)) eq(x[3][6],add(x[5][8],1)) eq(x[3][10],add(x[5][8],1)) eq(x[7][6],add(x[5][8],1)) eq(x[7][10],add(x[5][8],1)) </args>
      <args> aux_gb[69] eq(x[2][9],add(x[5][9],1)) eq(x[8][9],add(x[5][9],1)) eq(x[5][6],add(x[5][9],1)) eq(x[3][7],add(x[5][9],1)) eq(x[3][11],add(x[5][9],1)) eq(x[7][7],add(x[5][9],1)) eq(x[7][11],add(x[5][9],1)) </args>
      <args> aux_gb[70] eq(x[2][10],add(x[5][10],1)) eq(x[8][10],add(x[5][10],1)) eq(x[5][7],add(x[5][10],1)) eq(x[3][8],add(x[5][10],1)) eq(x[7][8],add(x[5][10],1)) </args>
      <args> aux_gb[71] eq(x[2][11],add(x[5][11],1)) eq(x[8][11],add(x[5][11],1)) eq(x[5][8],add(x[5][11],1)) eq(x[3][9],add(x[5][11],1)) eq(x[7][9],add(x[5][11],1)) </args>
      <args> aux_gb[72] eq(x[3][0],add(x[6][0],1)) eq(x[9][0],add(x[6][0],1)) eq(x[6][3],add(x[6][0],1)) eq(x[4][2],add(x[6][0],1)) eq(x[8][2],add(x[6][0],1)) </args>
      <args> aux_gb[73] eq(x[3][1],add(x[6][1],1)) eq(x[9][1],add(x[6][1],1)) eq(x[6][4],add(x[6][1],1)) eq(x[4][3],add(x[6][1],1)) eq(x[8][3],add(x[6][1],1)) </args>
      <args> aux_gb[74] eq(x[3][2],add(x[6][2],1)) eq(x[9][2],add(x[6][2],1)) eq(x[6][5],add(x[6][2],1)) eq(x[4][0],add(x[6][2],1)) eq(x[4][4],add(x[6][2],1)) eq(x[8][0],add(x[6][2],1)) eq(x[8][4],add(x[6][2],1)) </args>
      <args> aux_gb[75] eq(x[3][3],add(x[6][3],1)) eq(x[9][3],add(x[6][3],1)) eq(x[6][0],add(x[6][3],1)) eq(x[6][6],add(x[6][3],1)) eq(x[4][1],add(x[6][3],1)) eq(x[4][5],add(x[6][3],1)) eq(x[8][1],add(x[6][3],1)) eq(x[8][5],add(x[6][3],1)) </args>
      <args> aux_gb[76] eq(x[3][4],add(x[6][4],1)) eq(x[9][4],add(x[6][4],1)) eq(x[6][1],add(x[6][4],1)) eq(x[6][7],add(x[6][4],1)) eq(x[4][2],add(x[6][4],1)) eq(x[4][6],add(x[6][4],1)) eq(x[8][2],add(x[6][4],1)) eq(x[8][6],add(x[6][4],1)) </args>
      <args> aux_gb[77] eq(x[3][5],add(x[6][5],1)) eq(x[9][5],add(x[6][5],1)) eq(x[6][2],add(x[6][5],1)) eq(x[6][8],add(x[6][5],1)) eq(x[4][3],add(x[6][5],1)) eq(x[4][7],add(x[6][5],1)) eq(x[8][3],add(x[6][5],1)) eq(x[8][7],add(x[6][5],1)) </args>
      <args> aux_gb[78] eq(x[3][6],add(x[6][6],1)) eq(x[9][6],add(x[6][6],1)) eq(x[6][3],add(x[6][6],1)) eq(x[6][9],add(x[6][6],1)) eq(x[4][4],add(x[6][6],1)) eq(x[4][8],add(x[6][6],1)) eq(x[8][4],add(x[6][6],1)) eq(x[8][8],add(x[6][6],1)) </args>
      <args> aux_gb[79] eq(x[3][7],add(x[6][7],1)) eq(x[9][7],add(x[6][7],1)) eq(x[6][4],add(x[6][7],1)) eq(x[6][10],add(x[6][7],1)) eq(x[4][5],add(x[6][7],1)) eq(x[4][9],add(x[6][7],1)) eq(x[8][5],add(x[6][7],1)) eq(x[8][9],add(x[6][7],1)) </args>
      <args> aux_gb[80] eq(x[3][8],add(x[6][8],1)) eq(x[9][8],add(x[6][8],1)) eq(x[6][5],add(x[6][8],1)) eq(x[6][11],add(x[6][8],1)) eq(x[4][6],add(x[6][8],1)) eq(x[4][10],add(x[6][8],1)) eq(x[8][6],add(x[6][8],1)) eq(x[8][10],add(x[6][8],1)) </args>
      <args> aux_gb[81] eq(x[3][9],add(x[6][9],1)) eq(x[9][9],add(x[6][9],1)) eq(x[6][6],add(x[6][9],1)) eq(x[4][7],add(x[6][9],1)) eq(x[4][11],add(x[6][9],1)) eq(x[8][7],add(x[6][9],1)) eq(x[8][11],add(x[6][9],1)) </args>
      <args> aux_gb[82] eq(x[3][10],add(x[6][10],1)) eq(x[9][10],add(x[6][10],1)) eq(x[6][7],add(x[6][10],1)) eq(x[4][8],add(x[6][10],1)) eq(x[8][8],add(x[6][10],1)) </args>
      <args> aux_gb[83] eq(x[3][11],add(x[6][11],1)) eq(x[9][11],add(x[6][11],1)) eq(x[6][8],add(x[6][11],1)) eq(x[4][9],add(x[6][11],1)) eq(x[8][9],add(x[6][11],1)) </args>
      <args> aux_gb[84] eq(x[4][0],add(x[7][0],1)) eq(x[10][0],add(x[7][0],1)) eq(x[7][3],add(x[7][0],1)) eq(x[5][2],add(x[7][0],1)) eq(x[9][2],add(x[7][0],1)) </args>
      <args> aux_gb[85] eq(x[4][1],add(x[7][1],1)) eq(x[10][1],add(x[7][1],1)) eq(x[7][4],add(x[7][1],1)) eq(x[5][3],add(x[7][1],1)) eq(x[9][3],add(x[7][1],1)) </args>
      <args> aux_gb[86] eq(x[4][2],add(x[7][2],1)) eq(x[10][2],add(x[7][2],1)) eq(x[7][5],add(x[7][2],1)) eq(x[5][0],add(x[7][2],1)) eq(x[5][4],add(x[7][2],1)) eq(x[9][0],add(x[7][2],1)) eq(x[9][4],add(x[7][2],1)) </args>
      <args> aux_gb[87] eq(x[4][3],add(x[7][3],1)) eq(x[10][3],add(x[7][3],1)) eq(x[7][0],add(x[7][3],1)) eq(x[7][6],add(x[7][3],1)) eq(x[5][1],add(x[7][3],1)) eq(x[5][5],add(x[7][3],1)) eq(x[9][1],add(x[7][3],1)) eq(x[9][5],add(x[7][3],1)) </args>
      <args> aux_gb[88] eq(x[4][4],add(x[7][4],1)) eq(x[10][4],add(x[7][4],1)) eq(x[7][1],add(x[7][4],1)) eq(x[7][7],add(x[7][4],1)) eq(x[5][2],add(x[7][4],1)) eq(x[5][6],add(x[7][4],1)) eq(x[9][2],add(x[7][4],1)) eq(x[9][6],add(x[7][4],1)) </args>
      <args> aux_gb[89] eq(x[4][5],add(x[7][5],1)) eq(x[10][5],add(x[7][5],1)) eq(x[7][2],add(x[7][5],1)) eq(x[7][8],add(x[7][5],1)) eq(x[5][3],add(x[7][5],1)) eq(x[5][7],add(x[7][5],1)) eq(x[9][3],add(x[7][5],1)) eq(x[9][7],add(x[7][5],1)) </args>
      <args> aux_gb[90] eq(x[4][6],add(x[7][6],1)) eq(x[10][6],add(x[7][6],1)) eq(x[7][3],add(x[7][6],1)) eq(x[7][9],add(x[7][6],1)) eq(x[5][4],add(x[7][6],1)) eq(x[5][8],add(x[7][6],1)) eq(x[9][4],add(x[7][6],1)) eq(x[9][8],add(x[7][6],1)) </args>
      <args> aux_gb[91] eq(x[4][7],add(x[7][7],1)) eq(x[10][7],add(x[7][7],1)) eq(x[7][4],add(x[7][7],1)) eq(x[7][10],add(x[7][7],1)) eq(x[5][5],add(x[7][7],1)) eq(x[5][9],add(x[7][7],1)) eq(x[9][5],add(x[7][7],1)) eq(x[9][9],add(x[7][7],1)) </args>
      <args> aux_gb[92] eq(x[4][8],add(x[7][8],1)) eq(x[10][8],add(x[7][8],1)) eq(x[7][5],add(x[7][8],1)) eq(x[7][11],add(x[7][8],1)) eq(x[5][6],add(x[7][8],1)) eq(x[5][10],add(x[7][8],1)) eq(x[9][6],add(x[7][8],1)) eq(x[9][10],add(x[7][8],1)) </args>
      <args> aux_gb[93] eq(x[4][9],add(x[7][9],1)) eq(x[10][9],add(x[7][9],1)) eq(x[7][6],add(x[7][9],1)) eq(x[5][7],add(x[7][9],1)) eq(x[5][11],add(x[7][9],1)) eq(x[9][7],add(x[7][9],1)) eq(x[9][11],add(x[7][9],1)) </args>
      <args> aux_gb[94] eq(x[4][10],add(x[7][10],1)) eq(x[10][10],add(x[7][10],1)) eq(x[7][7],add(x[7][10],1)) eq(x[5][8],add(x[7][10],1)) eq(x[9][8],add(x[7][10],1)) </args>
      <args> aux_gb[95] eq(x[4][11],add(x[7][11],1)) eq(x[10][11],add(x[7][11],1)) eq(x[7][8],add(x[7][11],1)) eq(x[5][9],add(x[7][11],1)) eq(x[9][9],add(x[7][11],1)) </args>
      <args> aux_gb[96] eq(x[5][0],add(x[8][0],1)) eq(x[11][0],add(x[8][0],1)) eq(x[8][3],add(x[8][0],1)) eq(x[6][2],add(x[8][0],1)) eq(x[10][2],add(x[8][0],1)) </args>
      <args> aux_gb[97] eq(x[5][1],add(x[8][1],1)) eq(x[11][1],add(x[8][1],1)) eq(x[8][4],add(x[8][1],1)) eq(x[6][3],add(x[8][1],1)) eq(x[10][3],add(x[8][1],1)) </args>
      <args> aux_gb[98] eq(x[5][2],add(x[8][2],1)) eq(x[11][2],add(x[8][2],1)) eq(x[8][5],add(x[8][2],1)) eq(x[6][0],add(x[8][2],1)) eq(x[6][4],add(x[8][2],1)) eq(x[10][0],add(x[8][2],1)) eq(x[10][4],add(x[8][2],1)) </args>
      <args> aux_gb[99] eq(x[5][3],add(x[8][3],1)) eq(x[11][3],add(x[8][3],1)) eq(x[8][0],add(x[8][3],1)) eq(x[8][6],add(x[8][3],1)) eq(x[6][1],add(x[8][3],1)) eq(x[6][5],add(x[8][3],1)) eq(x[10][1],add(x[8][3],1)) eq(x[10][5],add(x[8][3],1)) </args>
      <args> aux_gb[100] eq(x[5][4],add(x[8][4],1)) eq(x[11][4],add(x[8][4],1)) eq(x[8][1],add(x[8][4],1)) eq(x[8][7],add(x[8][4],1)) eq(x[6][2],add(x[8][4],1)) eq(x[6][6],add(x[8][4],1)) eq(x[10][2],add(x[8][4],1)) eq(x[10][6],add(x[8][4],1)) </args>
      <args> aux_gb[101] eq(x[5][5],add(x[8][5],1)) eq(x[11][5],add(x[8][5],1)) eq(x[8][2],add(x[8][5],1)) eq(x[8][8],add(x[8][5],1)) eq(x[6][3],add(x[8][5],1)) eq(x[6][7],add(x[8][5],1)) eq(x[10][3],add(x[8][5],1)) eq(x[10][7],add(x[8][5],1)) </args>
      <args> aux_gb[102] eq(x[5][6],add(x[8][6],1)) eq(x[11][6],add(x[8][6],1)) eq(x[8][3],add(x[8][6],1)) eq(x[8][9],add(x[8][6],1)) eq(x[6][4],add(x[8][6],1)) eq(x[6][8],add(x[8][6],1)) eq(x[10][4],add(x[8][6],1)) eq(x[10][8],add(x[8][6],1)) </args>
      <args> aux_gb[103] eq(x[5][7],add(x[8][7],1)) eq(x[11][7],add(x[8][7],1)) eq(x[8][4],add(x[8][7],1)) eq(x[8][10],add(x[8][7],1)) eq(x[6][5],add(x[8][7],1)) eq(x[6][9],add(x[8][7],1)) eq(x[10][5],add(x[8][7],1)) eq(x[10][9],add(x[8][7],1)) </args>
      <args> aux_gb[104] eq(x[5][8],add(x[8][8],1)) eq(x[11][8],add(x[8][8],1)) eq(x[8][5],add(x[8][8],1)) eq(x[8][11],add(x[8][8],1)) eq(x[6][6],add(x[8][8],1)) eq(x[6][10],add(x[8][8],1)) eq(x[10][6],add(x[8][8],1)) eq(x[10][10],add(x[8][8],1)) </args>
      <args> aux_gb[105] eq(x[5][9],add(x[8][9],1)) eq(x[11][9],add(x[8][9],1)) eq(x[8][6],add(x[8][9],1)) eq(x[6][7],add(x[8][9],1)) eq(x[6][11],add(x[8][9],1)) eq(x[10][7],add(x[8][9],1)) eq(x[10][11],add(x[8][9],1)) </args>
      <args> aux_gb[106] eq(x[5][10],add(x[8][10],1)) eq(x[11][10],add(x[8][10],1)) eq(x[8][7],add(x[8][10],1)) eq(x[6][8],add(x[8][10],1)) eq(x[10][8],add(x[8][10],1)) </args>
      <args> aux_gb[107] eq(x[5][11],add(x[8][11],1)) eq(x[11][11],add(x[8][11],1)) eq(x[8][8],add(x[8][11],1)) eq(x[6][9],add(x[8][11],1)) eq(x[10][9],add(x[8][11],1)) </args>
      <args> aux_gb[108] eq(x[6][0],add(x[9][0],1)) eq(x[9][3],add(x[9][0],1)) eq(x[7][2],add(x[9][0],1)) eq(x[11][2],add(x[9][0],1)) </args>
      <args> aux_gb[109] eq(x[6][1],add(x[9][1],1)) eq(x[9][4],add(x[9][1],1)) eq(x[7][3],add(x[9][1],1)) eq(x[11][3],add(x[9][1],1)) </args>
      <args> aux_gb[110] eq(x[6][2],add(x[9][2],1)) eq(x[9][5],add(x[9][2],1)) eq(x[7][0],add(x[9][2],1)) eq(x[7][4],add(x[9][2],1)) eq(x[11][0],add(x[9][2],1)) eq(x[11][4],add(x[9][2],1)) </args>
      <args> aux_gb[111] eq(x[6][3],add(x[9][3],1)) eq(x[9][0],add(x[9][3],1)) eq(x[9][6],add(x[9][3],1)) eq(x[7][1],add(x[9][3],1)) eq(x[7][5],add(x[9][3],1)) eq(x[11][1],add(x[9][3],1)) eq(x[11][5],add(x[9][3],1)) </args>
      <args> aux_gb[112] eq(x[6][4],add(x[9][4],1)) eq(x[9][1],add(x[9][4],1)) eq(x[9][7],add(x[9][4],1)) eq(x[7][2],add(x[9][4],1)) eq(x[7][6],add(x[9][4],1)) eq(x[11][2],add(x[9][4],1)) eq(x[11][6],add(x[9][4],1)) </args>
      <args> aux_gb[113] eq(x[6][5],add(x[9][5],1)) eq(x[9][2],add(x[9][5],1)) eq(x[9][8],add(x[9][5],1)) eq(x[7][3],add(x[9][5],1)) eq(x[7][7],add(x[9][5],1)) eq(x[11][3],add(x[9][5],1)) eq(x[11][7],add(x[9][5],1)) </args>
      <args> aux_gb[114] eq(x[6][6],add(x[9][6],1)) eq(x[9][3],add(x[9][6],1)) eq(x[9][9],add(x[9][6],1)) eq(x[7][4],add(x[9][6],1)) eq(x[7][8],add(x[9][6],1)) eq(x[11][4],add(x[9][6],1)) eq(x[11][8],add(x[9][6],1)) </args>
      <args> aux_gb[115] eq(x[6][7],add(x[9][7],1)) eq(x[9][4],add(x[9][7],1)) eq(x[9][10],add(x[9][7],1)) eq(x[7][5],add(x[9][7],1)) eq(x[7][9],add(x[9][7],1)) eq(x[11][5],add(x[9][7],1)) eq(x[11][9],add(x[9][7],1)) </args>
      <args> aux_gb[116] eq(x[6][8],add(x[9][8],1)) eq(x[9][5],add(x[9][8],1)) eq(x[9][11],add(x[9][8],1)) eq(x[7][6],add(x[9][8],1)) eq(x[7][10],add(x[9][8],1)) eq(x[11][6],add(x[9][8],1)) eq(x[11][10],add(x[9][8],1)) </args>
      <args> aux_gb[117] eq(x[6][9],add(x[9][9],1)) eq(x[9][6],add(x[9][9],1)) eq(x[7][7],add(x[9][9],1)) eq(x[7][11],add(x[9][9],1)) eq(x[11][7],add(x[9][9],1)) eq(x[11][11],add(x[9][9],1)) </args>
      <args> aux_gb[118] eq(x[6][10],add(x[9][10],1)) eq(x[9][7],add(x[9][10],1)) eq(x[7][8],add(x[9][10],1)) eq(x[11][8],add(x[9][10],1)) </args>
      <args> aux_gb[119] eq(x[6][11],add(x[9][11],1)) eq(x[9][8],add(x[9][11],1)) eq(x[7][9],add(x[9][11],1)) eq(x[11][9],add(x[9][11],1)) </args>
      <args> aux_gb[120] eq(x[7][0],add(x[10][0],1)) eq(x[10][3],add(x[10][0],1)) eq(x[8][2],add(x[10][0],1)) </args>
      <args> aux_gb[121] eq(x[7][1],add(x[10][1],1)) eq(x[10][4],add(x[10][1],1)) eq(x[8][3],add(x[10][1],1)) </args>
      <args> aux_gb[122] eq(x[7][2],add(x[10][2],1)) eq(x[10][5],add(x[10][2],1)) eq(x[8][0],add(x[10][2],1)) eq(x[8][4],add(x[10][2],1)) </args>
      <args> aux_gb[123] eq(x[7][3],add(x[10][3],1)) eq(x[10][0],add(x[10][3],1)) eq(x[10][6],add(x[10][3],1)) eq(x[8][1],add(x[10][3],1)) eq(x[8][5],add(x[10][3],1)) </args>
      <args> aux_gb[124] eq(x[7][4],add(x[10][4],1)) eq(x[10][1],add(x[10][4],1)) eq(x[10][7],add(x[10][4],1)) eq(x[8][2],add(x[10][4],1)) eq(x[8][6],add(x[10][4],1)) </args>
      <args> aux_gb[125] eq(x[7][5],add(x[10][5],1)) eq(x[10][2],add(x[10][5],1)) eq(x[10][8],add(x[10][5],1)) eq(x[8][3],add(x[10][5],1)) eq(x[8][7],add(x[10][5],1)) </args>
      <args> aux_gb[126] eq(x[7][6],add(x[10][6],1)) eq(x[10][3],add(x[10][6],1)) eq(x[10][9],add(x[10][6],1)) eq(x[8][4],add(x[10][6],1)) eq(x[8][8],add(x[10][6],1)) </args>
      <args> aux_gb[127] eq(x[7][7],add(x[10][7],1)) eq(x[10][4],add(x[10][7],1)) eq(x[10][10],add(x[10][7],1)) eq(x[8][5],add(x[10][7],1)) eq(x[8][9],add(x[10][7],1)) </args>
      <args> aux_gb[128] eq(x[7][8],add(x[10][8],1)) eq(x[10][5],add(x[10][8],1)) eq(x[10][11],add(x[10][8],1)) eq(x[8][6],add(x[10][8],1)) eq(x[8][10],add(x[10][8],1)) </args>
      <args> aux_gb[129] eq(x[7][9],add(x[10][9],1)) eq(x[10][6],add(x[10][9],1)) eq(x[8][7],add(x[10][9],1)) eq(x[8][11],add(x[10][9],1)) </args>
      <args> aux_gb[130] eq(x[7][10],add(x[10][10],1)) eq(x[10][7],add(x[10][10],1)) eq(x[8][8],add(x[10][10],1)) </args>
      <args> aux_gb[131] eq(x[7][11],add(x[10][11],1)) eq(x[10][8],add(x[10][11],1)) eq(x[8][9],add(x[10][11],1)) </args>
      <args> aux_gb[132] eq(x[8][0],add(x[11][0],1)) eq(x[11][3],add(x[11][0],1)) eq(x[9][2],add(x[11][0],1)) </args>
      <args> aux_gb[133] eq(x[8][1],add(x[11][1],1)) eq(x[11][4],add(x[11][1],1)) eq(x[9][3],add(x[11][1],1)) </args>
      <args> aux_gb[134] eq(x[8][2],add(x[11][2],1)) eq(x[11][5],add(x[11][2],1)) eq(x[9][0],add(x[11][2],1)) eq(x[9][4],add(x[11][2],1)) </args>
      <args> aux_gb[135] eq(x[8][3],add(x[11][3],1)) eq(x[11][0],add(x[11][3],1)) eq(x[11][6],add(x[11][3],1)) eq(x[9][1],add(x[11][3],1)) eq(x[9][5],add(x[11][3],1)) </args>
      <args> aux_gb[136] eq(x[8][4],add(x[11][4],1)) eq(x[11][1],add(x[11][4],1)) eq(x[11][7],add(x[11][4],1)) eq(x[9][2],add(x[11][4],1)) eq(x[9][6],add(x[11][4],1)) </args>
      <args> aux_gb[137] eq(x[8][5],add(x[11][5],1)) eq(x[11][2],add(x[11][5],1)) eq(x[11][8],add(x[11][5],1)) eq(x[9][3],add(x[11][5],1)) eq(x[9][7],add(x[11][5],1)) </args>
      <args> aux_gb[138] eq(x[8][6],add(x[11][6],1)) eq(x[11][3],add(x[11][6],1)) eq(x[11][9],add(x[11][6],1)) eq(x[9][4],add(x[11][6],1)) eq(x[9][8],add(x[11][6],1)) </args>
      <args> aux_gb[139] eq(x[8][7],add(x[11][7],1)) eq(x[11][4],add(x[11][7],1)) eq(x[11][10],add(x[11][7],1)) eq(x[9][5],add(x[11][7],1)) eq(x[9][9],add(x[11][7],1)) </args>
      <args> aux_gb[140] eq(x[8][8],add(x[11][8],1)) eq(x[11][5],add(x[11][8],1)) eq(x[11][11],add(x[11][8],1)) eq(x[9][6],add(x[11][8],1)) eq(x[9][10],add(x[11][8],1)) </args>
      <args> aux_gb[141] eq(x[8][9],add(x[11][9],1)) eq(x[11][6],add(x[11][9],1)) eq(x[9][7],add(x[11][9],1)) eq(x[9][11],add(x[11][9],1)) </args>
      <args> aux_gb[142] eq(x[8][10],add(x[11][10],1)) eq(x[11][7],add(x[11][10],1)) eq(x[9][8],add(x[11][10],1)) </args>
      <args> aux_gb[143] eq(x[8][11],add(x[11][11],1)) eq(x[11][8],add(x[11][11],1)) eq(x[9][9],add(x[11][11],1)) </args>
    </group>
  </constraints>
</instance>
